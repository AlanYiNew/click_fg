/*
 * Copyright 2017, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(DATA61_BSD)
 */

#include <rumprun_camkes.h>

import <rumprun.camkes>;
import "connectors.camkes";
import "components/central_routing/central_routing.camkes";
import "components/rump_ether/rump_ether.camkes";
import "components/reverse_string/server.camkes";
component EthDevice {
    hardware;
    emits IRQ irq;
}

assembly {
 composition {
     component rumprun_platform_layer rrpl;
     component rumprun_ether rump_ether0;
     component rumprun_ether rump_ether1;
     component PCIConfigIO pci_config;
     component EthDevice eth0;
     component EthDevice eth1;
     component central_routing routing;



     RUMPRUN_META_CONNECTION(rump_ether1, rrpl)
     RUMPRUN_META_CONNECTION(rump_ether0, rrpl)
     RUMPRUN_META_CONNECTION(routing,rrpl)

     connection seL4RPCCall serial_pci_config(from pci_config.putchar, to rrpl.putchar);

     connection seL4MultiSharedData conn0(from rump_ether0.camkes_buffer, to routing.buffer);
     connection seL4MultiSharedData conn1(from rump_ether1.camkes_buffer, to routing.buffer);

     connection seL4MultiSharedData icmp0(from rump_ether0.icmp_buffer, to routing.icmp_buffer);
     connection seL4MultiSharedData icmp1(from rump_ether1.icmp_buffer, to routing.icmp_buffer);    

     connection seL4MultiNotification simpleEvent1(from rump_ether0.camkes_ev, to routing.ev);
     connection seL4Notification simpleEvent2(from routing.ev1, to rump_ether0.camkes_ev1);

     connection seL4MultiNotification simpleEvent3(from rump_ether1.camkes_ev, to routing.ev);
     connection seL4Notification simpleEvent4(from routing.ev2, to rump_ether1.camkes_ev1);

     connection seL4RPCCall pciconfig0(from rump_ether0.pci_config, to pci_config.pci_config);
     connection seL4RPCCall pciconfig1(from rump_ether1.pci_config, to pci_config.pci_config);
     connection seL4RPCCall pciconfig3(from routing.pci_config, to pci_config.pci_config);

     connection seL4HardwareInterrupt eth_irq0(from eth0.irq, to rump_ether0.eth_irq);
     connection seL4HardwareInterrupt eth_irq1(from eth1.irq, to rump_ether1.eth_irq);

     connection seL4MultiSharedData todp1(from rump_ether1.db_buffer, to routing.db_buffer);
     connection seL4MultiSharedData todp2(from rump_ether0.db_buffer, to routing.db_buffer);

 }

 configuration {
    rump_ether0.rump_config = { "rump_net": 2,
                                "rumprunbake_config": "sel4_ethernet", 
                                "cmdline": "echo 6666",
                                "pci_config_interface" : "pci_config",
                                "eth_irq_interface" : "eth_irq",
                                "eth_irq_number" : 10,
                                "wm_val" : "wm1",
                                "addr" : "192.168.2.98",
                                "mask" : "24",
                                "interfaces_to_expose": ["mac","ip_addr","camkes_buffer", "camkes_ev", "camkes_ev1","wm_val","db_buffer","camkes_id_attributes","proxy_arp","icmp_buffer"] };

    rump_ether1.rump_config = { "rump_net": 2,
                                "rumprunbake_config": "sel4_ethernet",
                                "cmdline": "echo 6666",
                                "pci_config_interface" : "pci_config",
                                "eth_irq_interface" : "eth_irq",
                                "eth_irq_number" : 11,
                                "wm_val" : "wm0",
                                "addr" : "192.168.1.98",
                                "mask" : "24",
                                "interfaces_to_expose": ["mac","ip_addr","camkes_buffer", "camkes_ev", "camkes_ev1","wm_val","db_buffer","camkes_id_attributes", "proxy_arp", "icmp_buffer"] };

    routing.rump_config = {     "rump_net": 4,
                                "rumprunbake_config": "sel4_generic", 
                                "cmdline": "echo 6666",
                                "interfaces_to_expose":["ev","ev1","ev2","buffer","ip_addr1","ip_addr2","rt","db_buffer","icmp_buffer"]};

    RUMPRUN_COMPONENT_CONFIGURATION(rump_ether0, 0)
    RUMPRUN_COMPONENT_CONFIGURATION(rump_ether1, 1)
    RUMPRUN_COMPONENT_CONFIGURATION(routing, 2)
    

    rump_ether0.wm_val = "wm1";
    rump_ether1.wm_val = "wm0";

    //Maybe better to change them into array
    routing.ip_addr1 = "192.168.1.98/24";
    //Change xx to the interface value
    routing.ip_addr0 = "192.168.2.98/24";   
    //routing.ip_addr2 = "192.168.3.98/24";   
 
    //memory mapped region for xxxxx,xxxxx,native ethernet card
    //rump_ether0.untyped_mmios = ["0xfebc0000:17", "0xf7f39000:12", "0xf7f00000:17"];
    
    //wm0:0xf7b00000
    //wm1:0xf7a00000
    //wm2:0xf7900000
    rump_ether1.untyped_mmios = ["0xf7b00000:20"];
    rump_ether0.untyped_mmios = ["0xf7a00000:20"];

    //These attributes are kind of id please make them consistent
    rump_ether0.db_buffer_attributes = "0";
    rump_ether1.db_buffer_attributes = "1";    

    rump_ether0.camkes_buffer_attributes = "0";
    rump_ether1.camkes_buffer_attributes = "1";

    rump_ether0.camkes_id_attributes = "2";//USE for COLOR
    rump_ether1.camkes_id_attributes = "1";//USE for COLOR

    rump_ether0.icmp_buffer_attributes = "0";
    rump_ether1.icmp_buffer_attributes = "1";

    rump_ether0.ip_addr = "192.168.2.98";
    rump_ether1.ip_addr = "192.168.1.98";
   
    rump_ether0.mac = "00:1b:21:41:25:57";
    rump_ether1.mac = "00:1b:21:41:25:56";

    rump_ether0.proxy_arp = [
        "192.168.1.0/24 00:1b:21:41:25:57",
        "192.168.3.0/24 00:1b:21:41:25:57"
    ];

    rump_ether1.proxy_arp =[
        "192.168.2.0/24 00:1b:21:41:25:56",
        "192.168.3.0/24 00:1b:21:41:25:56"
    ];

 
    //Define static routing table
    //0 to this machine 
    //1 to 192.168.1.0/24
    //2 to 192.168.2.0/24
    //3 to 192.168.3.0/24
    //0.0.0.0/0 18.26.4.1 1 (add this entry as deafault gateway if needed)
    //When add or delete an entry, remember to change tne RT_NUM_ENTRY in porttype.h
    //routing.rt = ["192.168.1.0/32 0",
    //              "192.168.1.98/32 0",
    //              "192.168.1.255/32 0",
    //              "192.168.2.0/32 0"
    //              "192.168.2.98/32 0",
    //              "192.168.2.255/32 0",
    //              "192.168.3.0/32 0"
    //              "192.168.3.98/32 0",
    //              "192.168.3.255/32 0",
    //              "192.168.1.0/24 1",
    //              "192.168.2.0/24 2",
    //              "192.168.3.0/24 3"];
    //routing.rt_num_entry = 12; 
   
    routing.rt = ["192.168.1.0/32 0",
                  "192.168.1.98/32 0",
                  "192.168.1.255/32 0",
                  "192.168.2.0/32 0",
                  "192.168.2.98/32 0",
                  "192.168.2.255/32 0",
    //              "192.168.3.0/32 0"
    //              "192.168.3.98/32 0",
    //              "192.168.3.255/32 0",
                  "192.168.1.0/24 1",
                  "192.168.2.0/24 2",
    //              "192.168.3.0/24 3"
                 ];
 
    eth0.irq_irq_type = "pci";
    eth0.irq_irq_ioapic = 0;
    eth0.irq_irq_ioapic_pin = 17;
    eth0.irq_irq_vector = 10;

    eth1.irq_irq_type = "pci";
    eth1.irq_irq_ioapic = 0;
    eth1.irq_irq_ioapic_pin = 16;
    eth1.irq_irq_vector = 11;


    pci_config.putchar_attributes = 0;
 }
}
